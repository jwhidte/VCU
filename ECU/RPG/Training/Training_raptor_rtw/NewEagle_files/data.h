/*****************************************************************************
   data.h
   Generated By:
   Raptor 2022b_1.0.14751 (6897)
   Matlab (R2022b) 9.13

   Copyright (c) 2018 New Eagle Products, Inc.
   All rights reserved.

   Code Generated at: Mon Jan 30 16:09:40 2023
 *****************************************************************************/

#ifndef __DATA_H
#define __DATA_H
#include "faultmanager.h"
#include "core_env.h"
#include "sws_eep.h"
#include "gnu_pragma_conf.h"
#include "memlay_pub.h"
#include "machine.h"
#define uint64                         unsigned long
#include "sbreset.h"
#undef uint64
#include "reset_auto_conf.h"
#include "reset_pub.h"
#include "codegen_hwe_cpu.h"
#include "e_rtatr.h"
#include "cpu_pub.h"
#include "rtwtypes.h"
#include "raptor_types.h"

/*  SS_DOUBLE  =  0,    / real32_T    /
   SS_SINGLE  =  1,    / real32_T    /
   SS_INT8    =  2,    / int8_T      /
   SS_UINT8   =  3,    / uint8_T     /
   SS_INT16   =  4,    / int16_T     /
   SS_UINT16  =  5,    / uint16_T    /
   SS_INT32   =  6,    / int32_T     /
   SS_UINT32  =  7,    / uint32_T    /
   SS_BOOLEAN =  8     / boolean_T  */
/***** RAM Variables *************************************************/
#define RAMVARIABLES

typedef struct {
  uint8_T INIT_RAM_Variables;
  boolean_T FgndTasksStopped;          /* Type : boolean_T, Storage : RAM,  */
  boolean_T KeySw_Bgnd;                /* Type : boolean_T, Storage : RAM,  */
  boolean_T KeepModuleOn;              /* Type : boolean_T, Storage : RAM,  */
  real32_T ETC_DC;                     /* Type : real32_T, Storage : RAM,  */
  uint16_T APP_ADC;                    /* Type : uint16_T, Storage : RAM,  */
  boolean_T APPHighProbe;              /* Type : boolean_T, Storage : RAM,  */
  boolean_T APPLowProbe;               /* Type : boolean_T, Storage : RAM,  */
  real32_T APP;                        /* Type : real32_T, Storage : RAM,  */
  uint16_T TPS_ADC;                    /* Type : uint16_T, Storage : RAM,  */
  boolean_T TPSHighProbe;              /* Type : boolean_T, Storage : RAM,  */
  boolean_T TPSLowProbe;               /* Type : boolean_T, Storage : RAM,  */
  real32_T TPS;                        /* Type : real32_T, Storage : RAM,  */
  real32_T Delta_Time;                 /* Type : real32_T, Storage : RAM,  */
  real32_T Absolute_Time;              /* Type : real32_T, Storage : RAM,  */
  uint32_T EcuAddr_RAM;                /* Type : uint32_T, Storage : RAM,  */
  uint8_T CAN1_CANTX_QueueOverrun;     /* Type : uint8_T, Storage : RAM,  */
  uint8_T CAN1_CANTX_QueueCount;       /* Type : uint8_T, Storage : RAM,  */
  uint8_T CAN1_CANTX_QueueMax;         /* Type : uint8_T, Storage : RAM,  */
  uint8_T CAN1_CANRX_QueueOverrun;     /* Type : uint8_T, Storage : RAM,  */
  uint8_T CAN1_CANRX_QueueCount;       /* Type : uint8_T, Storage : RAM,  */
  uint8_T CAN1_CANRX_QueueMax;         /* Type : uint8_T, Storage : RAM,  */
  uint32_T raptorFaultCounts_X[4];     /* Type : uint32_T, Storage : RAM,  */
  uint32_T raptorFaultCounts_Y[4];     /* Type : uint32_T, Storage : RAM,  */
  uint16_T faultActionCount[2];        /* Type : uint16_T, Storage : RAM,  */
  uint8_T EEPROM_State;                /* Type : uint8_T, Storage : RAM,  */
} RAMVariables_T;

#define START_SECTION_volatile_SlowRam_oem_32bit
#include "swsh_rb2oem.h"

extern RAMVariables_T RAMVariables ;

#define STOP_SECTION_volatile_SlowRam_oem_32bit
#include "swsh_rb2oem.h"

extern void initRAMVariables(RAMVariables_T*);

/***** CONST Variables *************************************************/
#define CONSTVARIABLES

typedef struct {
  uint8_T const ModelName[8];          /* Type : uint8_T, Storage : CONST,  */
  uint32_T const BuildNumber;          /* Type : uint32_T, Storage : CONST,  */
  uint8_T const MatlabVersion[13];     /* Type : uint8_T, Storage : CONST,  */
  uint8_T const RaptorVersion[20];     /* Type : uint8_T, Storage : CONST,  */
  uint8_T const SwIdTxt[12];           /* Type : uint8_T, Storage : CONST,  */
  uint8_T const CalIdTxt[16];          /* Type : uint8_T, Storage : CONST,  */
  uint8_T const BuildUID[21];          /* Type : uint8_T, Storage : CONST,  */
  uint16_T const IdTableRev;           /* Type : uint16_T, Storage : CONST,  */
  uint32_T const HardwareType;         /* Type : uint32_T, Storage : CONST,  */
  uint8_T const DateStamp[20];         /* Type : uint8_T, Storage : CONST,  */
} CONSTVariables_T;

#define START_SECTION_Const_oem_32bit
#include "swsh_rb2oem.h"

extern const CONSTVariables_T CONSTVariables;

#define STOP_SECTION_Const_oem_32bit
#include "swsh_rb2oem.h"

extern void initCONSTVariables(const CONSTVariables_T*);
typedef enum {
  EE_INIT = 0,
  EE_LOADED_DEFAULTS = 1,
  EE_LOADED_DEFAULTS_AFTER_PROGRAMMING = 2,
  EE_LOADED_DEFAULTS_INCORRECT_CRC = 3,
  EE_LOADED_DEFAULTS_INCORRECT_EEID = 4,
  EE_LOADED_DEFAULTS_ERROR_READING = 5,
  EE_LOADED_DEFAULTS_FAILED_DRV_INIT = 6,
  EE_LOADED_SAVED_VALUES_AFTER_PROGRAMMING = 7,
  EE_LOADED_SAVED_VALUES = 8,
  EE_LOADED_BACKUP_VALUES = 9,
  EE_STORE_IN_PROGESS = 10,
  EE_STORE_FAILED = 11,
  EE_STORE_SUCCESS = 12,
} EE_STATES;

/***** EE Variables *************************************************/
#define EEVARIABLES

typedef struct {
  uint32_T WriteCnt;                  /* Write Count: Identifies active Copy 	*/
  uint32_T EE_UniqID;
  uint8_T raptorFaultNonVolatileBits[4];/* Type : uint8_T, Storage : EEPROM */
  real32_T KeySwHiTimeThr;             /* Type : real32_T, Storage : CAL */
  real32_T KeySwLoTimeThr;             /* Type : real32_T, Storage : CAL */
  real32_T APP_DefaultValue;           /* Type : real32_T, Storage : CAL */
  real32_T TPS_DefaultValue;           /* Type : real32_T, Storage : CAL */
  boolean_T PWM_Enable;                /* Type : boolean_T, Storage : CAL */
  real32_T APP_InputHighThresh;        /* Type : real32_T, Storage : CAL */
  uint32_T APP_InputHi_X_Limit;        /* Type : uint32_T, Storage : CAL */
  uint32_T APP_InputHi_Y_Limit;        /* Type : uint32_T, Storage : CAL */
  real32_T APP_InputLowThresh;         /* Type : real32_T, Storage : CAL */
  uint32_T APP_InputLow_X_Limit;       /* Type : uint32_T, Storage : CAL */
  uint32_T APP_InputLow_Y_Limit;       /* Type : uint32_T, Storage : CAL */
  real32_T APP_ADCHiPT;                /* Type : real32_T, Storage : CAL */
  real32_T APP_ADCLoPT;                /* Type : real32_T, Storage : CAL */
  real32_T TPS_InputHighThresh;        /* Type : real32_T, Storage : CAL */
  uint32_T TPS_InputHi_X_Limit;        /* Type : uint32_T, Storage : CAL */
  uint32_T TPS_InputHi_Y_Limit;        /* Type : uint32_T, Storage : CAL */
  real32_T TPS_InputLowThresh;         /* Type : real32_T, Storage : CAL */
  uint32_T TPS_InputLow_X_Limit;       /* Type : uint32_T, Storage : CAL */
  uint32_T TPS_InputLow_Y_Limit;       /* Type : uint32_T, Storage : CAL */
  real32_T TPS_ADCHiPT;                /* Type : real32_T, Storage : CAL */
  real32_T TPS_ADCLoPT;                /* Type : real32_T, Storage : CAL */
  uint32_T CAN1__XCP_BC_ID;            /* Type : uint32_T, Storage : CAL */
  uint32_T CAN1__XCP_RX_ID;            /* Type : uint32_T, Storage : CAL */
  uint32_T CAN1__XCP_TX_ID;            /* Type : uint32_T, Storage : CAL */
  uint8_T INPUT29_ADCMon_HoldCount;    /* Type : uint8_T, Storage : CAL */
  uint16_T CAN1__XCP_Security;         /* Type : uint16_T, Storage : CAL */
  uint16_T CAN1_Startup_Delay;         /* Type : uint16_T, Storage : CAL */
  uint8_T CAN1_ErrorCheck_Interval;    /* Type : uint8_T, Storage : CAL */
  uint8_T CAN1_ErrorPassive_Delay;     /* Type : uint8_T, Storage : CAL */
  E_FaultState faultActionMapState[4][2];/* Type : E_FaultState, Storage : CAL */
  int16_T faultActionMapAction[4][2];  /* Type : int16_T, Storage : CAL */
  E_FaultOperation raptorFaultOperation[4];
                                    /* Type : E_FaultOperation, Storage : CAL */
  uint8_T InjCDrv_EndOfStart;          /* Type : uint8_T, Storage : CAL */
  uint8_T EndOfStart;                  /* Type : uint8_T, Storage : CAL */
  uint16_T CRC;
         /* CRC - Last two bytes per SDK spec for CRC Calc (Parker Specific) 	*/
} EEVariables_T;

extern const EEVariables_T EEVariables_DEFAULT;

#define START_SECTION_volatile_SlowRam_oem_32bit
#include "swsh_rb2oem.h"

extern EEVariables_T EEVariables_RAMShadow;

#define STOP_SECTION_volatile_SlowRam_oem_32bit
#include "swsh_rb2oem.h"

extern void App_EE_WriteAsync(uint8_T);
extern uint16_T Reset_xHistBuf[8] __attribute__ ((asection(".bss.earlycleared",
  "f=aw")));
extern struct Reset_Environment Reset_Env;
extern void App_EE_Store(void);
extern void App_EE_Defaults(void);
typedef struct {
  uint8_T INIT_RAM_EditVariables;
  real32_T ETC_DC_OvrVal;
                       /* Type : real32_T,  Init_Value : 0.0, Storage : RAM,  */
  uint8_T ETC_DC_OvrSts;  /* Type : uint8_T,  Init_Value : 0, Storage : RAM,  */
  uint32_T PWM_Freq;/* Type : uint32_T,  Init_Value : 50000U, Storage : RAM,  */
  uint16_T APP_ADC_OvrVal;
                        /* Type : uint16_T,  Init_Value : 0U, Storage : RAM,  */
  uint8_T APP_ADC_OvrSts; /* Type : uint8_T,  Init_Value : 0, Storage : RAM,  */
  real32_T APP_OvrVal; /* Type : real32_T,  Init_Value : 0.0, Storage : RAM,  */
  uint8_T APP_OvrSts;     /* Type : uint8_T,  Init_Value : 0, Storage : RAM,  */
  uint16_T TPS_ADC_OvrVal;
                        /* Type : uint16_T,  Init_Value : 0U, Storage : RAM,  */
  uint8_T TPS_ADC_OvrSts; /* Type : uint8_T,  Init_Value : 0, Storage : RAM,  */
  real32_T TPS_OvrVal; /* Type : real32_T,  Init_Value : 0.0, Storage : RAM,  */
  uint8_T TPS_OvrSts;     /* Type : uint8_T,  Init_Value : 0, Storage : RAM,  */
} RAMEditVariables_T;

#define START_SECTION_volatile_SlowRam_oem_32bit
#include "swsh_rb2oem.h"

extern RAMEditVariables_T RAMEditVariables ;

#define STOP_SECTION_volatile_SlowRam_oem_32bit
#include "swsh_rb2oem.h"

extern void initRAMEditVariables(void);

/***** #DEFINES Accessors *************************************************/
#define FgndTasksStopped_Data()        (RAMVariables.FgndTasksStopped)
#define FgndTasksStopped_Ptr()         (&(RAMVariables.FgndTasksStopped))
#define FgndTasksStopped_ELEMENTS()    (1 * 1)
#define KeySwHiTimeThr_Data()          (EEVariables_RAMShadow.KeySwHiTimeThr)
#define KeySwHiTimeThr_Ptr()           (&(EEVariables_RAMShadow.KeySwHiTimeThr))
#define KeySwHiTimeThr_ELEMENTS()      (1 * 1)
#define KeySwLoTimeThr_Data()          (EEVariables_RAMShadow.KeySwLoTimeThr)
#define KeySwLoTimeThr_Ptr()           (&(EEVariables_RAMShadow.KeySwLoTimeThr))
#define KeySwLoTimeThr_ELEMENTS()      (1 * 1)
#define KeySw_Bgnd_Data()              (RAMVariables.KeySw_Bgnd)
#define KeySw_Bgnd_Ptr()               (&(RAMVariables.KeySw_Bgnd))
#define KeySw_Bgnd_ELEMENTS()          (1 * 1)
#define KeepModuleOn_Data()            (RAMVariables.KeepModuleOn)
#define KeepModuleOn_Ptr()             (&(RAMVariables.KeepModuleOn))
#define KeepModuleOn_ELEMENTS()        (1 * 1)
#define APP_DefaultValue_Data()        (EEVariables_RAMShadow.APP_DefaultValue)
#define APP_DefaultValue_Ptr()         (&(EEVariables_RAMShadow.APP_DefaultValue))
#define APP_DefaultValue_ELEMENTS()    (1 * 1)
#define TPS_DefaultValue_Data()        (EEVariables_RAMShadow.TPS_DefaultValue)
#define TPS_DefaultValue_Ptr()         (&(EEVariables_RAMShadow.TPS_DefaultValue))
#define TPS_DefaultValue_ELEMENTS()    (1 * 1)
#define PWM_Enable_Data()              (EEVariables_RAMShadow.PWM_Enable)
#define PWM_Enable_Ptr()               (&(EEVariables_RAMShadow.PWM_Enable))
#define PWM_Enable_ELEMENTS()          (1 * 1)
#define ETC_DC_OvrVal_Data()           (RAMEditVariables.ETC_DC_OvrVal)
#define ETC_DC_OvrVal_Ptr()            (&(RAMEditVariables.ETC_DC_OvrVal))
#define ETC_DC_OvrVal_ELEMENTS()       (1 * 1)
#define ETC_DC_Data()                  (RAMVariables.ETC_DC)
#define ETC_DC_Ptr()                   (&(RAMVariables.ETC_DC))
#define ETC_DC_ELEMENTS()              (1 * 1)
#define ETC_DC_OvrSts_Data()           (RAMEditVariables.ETC_DC_OvrSts)
#define ETC_DC_OvrSts_Ptr()            (&(RAMEditVariables.ETC_DC_OvrSts))
#define ETC_DC_OvrSts_ELEMENTS()       (1 * 1)
#define PWM_Freq_Data()                (RAMEditVariables.PWM_Freq)
#define PWM_Freq_Ptr()                 (&(RAMEditVariables.PWM_Freq))
#define PWM_Freq_ELEMENTS()            (1 * 1)
#define APP_ADC_OvrVal_Data()          (RAMEditVariables.APP_ADC_OvrVal)
#define APP_ADC_OvrVal_Ptr()           (&(RAMEditVariables.APP_ADC_OvrVal))
#define APP_ADC_OvrVal_ELEMENTS()      (1 * 1)
#define APP_ADC_Data()                 (RAMVariables.APP_ADC)
#define APP_ADC_Ptr()                  (&(RAMVariables.APP_ADC))
#define APP_ADC_ELEMENTS()             (1 * 1)
#define APP_ADC_OvrSts_Data()          (RAMEditVariables.APP_ADC_OvrSts)
#define APP_ADC_OvrSts_Ptr()           (&(RAMEditVariables.APP_ADC_OvrSts))
#define APP_ADC_OvrSts_ELEMENTS()      (1 * 1)
#define APP_InputHighThresh_Data()     (EEVariables_RAMShadow.APP_InputHighThresh)
#define APP_InputHighThresh_Ptr()      (&(EEVariables_RAMShadow.APP_InputHighThresh))
#define APP_InputHighThresh_ELEMENTS() (1 * 1)
#define APP_InputHi_X_Limit_Data()     (EEVariables_RAMShadow.APP_InputHi_X_Limit)
#define APP_InputHi_X_Limit_Ptr()      (&(EEVariables_RAMShadow.APP_InputHi_X_Limit))
#define APP_InputHi_X_Limit_ELEMENTS() (1 * 1)
#define APP_InputHi_Y_Limit_Data()     (EEVariables_RAMShadow.APP_InputHi_Y_Limit)
#define APP_InputHi_Y_Limit_Ptr()      (&(EEVariables_RAMShadow.APP_InputHi_Y_Limit))
#define APP_InputHi_Y_Limit_ELEMENTS() (1 * 1)
#define APP_InputLowThresh_Data()      (EEVariables_RAMShadow.APP_InputLowThresh)
#define APP_InputLowThresh_Ptr()       (&(EEVariables_RAMShadow.APP_InputLowThresh))
#define APP_InputLowThresh_ELEMENTS()  (1 * 1)
#define APP_InputLow_X_Limit_Data()    (EEVariables_RAMShadow.APP_InputLow_X_Limit)
#define APP_InputLow_X_Limit_Ptr()     (&(EEVariables_RAMShadow.APP_InputLow_X_Limit))
#define APP_InputLow_X_Limit_ELEMENTS() (1 * 1)
#define APP_InputLow_Y_Limit_Data()    (EEVariables_RAMShadow.APP_InputLow_Y_Limit)
#define APP_InputLow_Y_Limit_Ptr()     (&(EEVariables_RAMShadow.APP_InputLow_Y_Limit))
#define APP_InputLow_Y_Limit_ELEMENTS() (1 * 1)
#define APPHighProbe_Data()            (RAMVariables.APPHighProbe)
#define APPHighProbe_Ptr()             (&(RAMVariables.APPHighProbe))
#define APPHighProbe_ELEMENTS()        (1 * 1)
#define APPLowProbe_Data()             (RAMVariables.APPLowProbe)
#define APPLowProbe_Ptr()              (&(RAMVariables.APPLowProbe))
#define APPLowProbe_ELEMENTS()         (1 * 1)
#define APP_ADCHiPT_Data()             (EEVariables_RAMShadow.APP_ADCHiPT)
#define APP_ADCHiPT_Ptr()              (&(EEVariables_RAMShadow.APP_ADCHiPT))
#define APP_ADCHiPT_ELEMENTS()         (1 * 1)
#define APP_ADCLoPT_Data()             (EEVariables_RAMShadow.APP_ADCLoPT)
#define APP_ADCLoPT_Ptr()              (&(EEVariables_RAMShadow.APP_ADCLoPT))
#define APP_ADCLoPT_ELEMENTS()         (1 * 1)
#define APP_OvrVal_Data()              (RAMEditVariables.APP_OvrVal)
#define APP_OvrVal_Ptr()               (&(RAMEditVariables.APP_OvrVal))
#define APP_OvrVal_ELEMENTS()          (1 * 1)
#define APP_Data()                     (RAMVariables.APP)
#define APP_Ptr()                      (&(RAMVariables.APP))
#define APP_ELEMENTS()                 (1 * 1)
#define APP_OvrSts_Data()              (RAMEditVariables.APP_OvrSts)
#define APP_OvrSts_Ptr()               (&(RAMEditVariables.APP_OvrSts))
#define APP_OvrSts_ELEMENTS()          (1 * 1)
#define TPS_ADC_OvrVal_Data()          (RAMEditVariables.TPS_ADC_OvrVal)
#define TPS_ADC_OvrVal_Ptr()           (&(RAMEditVariables.TPS_ADC_OvrVal))
#define TPS_ADC_OvrVal_ELEMENTS()      (1 * 1)
#define TPS_ADC_Data()                 (RAMVariables.TPS_ADC)
#define TPS_ADC_Ptr()                  (&(RAMVariables.TPS_ADC))
#define TPS_ADC_ELEMENTS()             (1 * 1)
#define TPS_ADC_OvrSts_Data()          (RAMEditVariables.TPS_ADC_OvrSts)
#define TPS_ADC_OvrSts_Ptr()           (&(RAMEditVariables.TPS_ADC_OvrSts))
#define TPS_ADC_OvrSts_ELEMENTS()      (1 * 1)
#define TPS_InputHighThresh_Data()     (EEVariables_RAMShadow.TPS_InputHighThresh)
#define TPS_InputHighThresh_Ptr()      (&(EEVariables_RAMShadow.TPS_InputHighThresh))
#define TPS_InputHighThresh_ELEMENTS() (1 * 1)
#define TPS_InputHi_X_Limit_Data()     (EEVariables_RAMShadow.TPS_InputHi_X_Limit)
#define TPS_InputHi_X_Limit_Ptr()      (&(EEVariables_RAMShadow.TPS_InputHi_X_Limit))
#define TPS_InputHi_X_Limit_ELEMENTS() (1 * 1)
#define TPS_InputHi_Y_Limit_Data()     (EEVariables_RAMShadow.TPS_InputHi_Y_Limit)
#define TPS_InputHi_Y_Limit_Ptr()      (&(EEVariables_RAMShadow.TPS_InputHi_Y_Limit))
#define TPS_InputHi_Y_Limit_ELEMENTS() (1 * 1)
#define TPS_InputLowThresh_Data()      (EEVariables_RAMShadow.TPS_InputLowThresh)
#define TPS_InputLowThresh_Ptr()       (&(EEVariables_RAMShadow.TPS_InputLowThresh))
#define TPS_InputLowThresh_ELEMENTS()  (1 * 1)
#define TPS_InputLow_X_Limit_Data()    (EEVariables_RAMShadow.TPS_InputLow_X_Limit)
#define TPS_InputLow_X_Limit_Ptr()     (&(EEVariables_RAMShadow.TPS_InputLow_X_Limit))
#define TPS_InputLow_X_Limit_ELEMENTS() (1 * 1)
#define TPS_InputLow_Y_Limit_Data()    (EEVariables_RAMShadow.TPS_InputLow_Y_Limit)
#define TPS_InputLow_Y_Limit_Ptr()     (&(EEVariables_RAMShadow.TPS_InputLow_Y_Limit))
#define TPS_InputLow_Y_Limit_ELEMENTS() (1 * 1)
#define TPSHighProbe_Data()            (RAMVariables.TPSHighProbe)
#define TPSHighProbe_Ptr()             (&(RAMVariables.TPSHighProbe))
#define TPSHighProbe_ELEMENTS()        (1 * 1)
#define TPSLowProbe_Data()             (RAMVariables.TPSLowProbe)
#define TPSLowProbe_Ptr()              (&(RAMVariables.TPSLowProbe))
#define TPSLowProbe_ELEMENTS()         (1 * 1)
#define TPS_ADCHiPT_Data()             (EEVariables_RAMShadow.TPS_ADCHiPT)
#define TPS_ADCHiPT_Ptr()              (&(EEVariables_RAMShadow.TPS_ADCHiPT))
#define TPS_ADCHiPT_ELEMENTS()         (1 * 1)
#define TPS_ADCLoPT_Data()             (EEVariables_RAMShadow.TPS_ADCLoPT)
#define TPS_ADCLoPT_Ptr()              (&(EEVariables_RAMShadow.TPS_ADCLoPT))
#define TPS_ADCLoPT_ELEMENTS()         (1 * 1)
#define TPS_OvrVal_Data()              (RAMEditVariables.TPS_OvrVal)
#define TPS_OvrVal_Ptr()               (&(RAMEditVariables.TPS_OvrVal))
#define TPS_OvrVal_ELEMENTS()          (1 * 1)
#define TPS_Data()                     (RAMVariables.TPS)
#define TPS_Ptr()                      (&(RAMVariables.TPS))
#define TPS_ELEMENTS()                 (1 * 1)
#define TPS_OvrSts_Data()              (RAMEditVariables.TPS_OvrSts)
#define TPS_OvrSts_Ptr()               (&(RAMEditVariables.TPS_OvrSts))
#define TPS_OvrSts_ELEMENTS()          (1 * 1)
#define Delta_Time_Data()              (RAMVariables.Delta_Time)
#define Delta_Time_Ptr()               (&(RAMVariables.Delta_Time))
#define Delta_Time_ELEMENTS()          (1 * 1)
#define Absolute_Time_Data()           (RAMVariables.Absolute_Time)
#define Absolute_Time_Ptr()            (&(RAMVariables.Absolute_Time))
#define Absolute_Time_ELEMENTS()       (1 * 1)
#define CAN1__XCP_BC_ID_Data()         (EEVariables_RAMShadow.CAN1__XCP_BC_ID)
#define CAN1__XCP_BC_ID_Ptr()          (&(EEVariables_RAMShadow.CAN1__XCP_BC_ID))
#define CAN1__XCP_BC_ID_ELEMENTS()     (1 * 1)
#define CAN1__XCP_RX_ID_Data()         (EEVariables_RAMShadow.CAN1__XCP_RX_ID)
#define CAN1__XCP_RX_ID_Ptr()          (&(EEVariables_RAMShadow.CAN1__XCP_RX_ID))
#define CAN1__XCP_RX_ID_ELEMENTS()     (1 * 1)
#define CAN1__XCP_TX_ID_Data()         (EEVariables_RAMShadow.CAN1__XCP_TX_ID)
#define CAN1__XCP_TX_ID_Ptr()          (&(EEVariables_RAMShadow.CAN1__XCP_TX_ID))
#define CAN1__XCP_TX_ID_ELEMENTS()     (1 * 1)
#define ModelName_Data()               (CONSTVariables.ModelName)
#define ModelName_Ptr()                (&(CONSTVariables.ModelName))
#define ModelName_ELEMENTS()           (1 * 8)
#define BuildNumber_Data()             (CONSTVariables.BuildNumber)
#define BuildNumber_Ptr()              (&(CONSTVariables.BuildNumber))
#define BuildNumber_ELEMENTS()         (1 * 1)
#define MatlabVersion_Data()           (CONSTVariables.MatlabVersion)
#define MatlabVersion_Ptr()            (&(CONSTVariables.MatlabVersion))
#define MatlabVersion_ELEMENTS()       (1 * 13)
#define RaptorVersion_Data()           (CONSTVariables.RaptorVersion)
#define RaptorVersion_Ptr()            (&(CONSTVariables.RaptorVersion))
#define RaptorVersion_ELEMENTS()       (1 * 20)
#define SwIdTxt_Data()                 (CONSTVariables.SwIdTxt)
#define SwIdTxt_Ptr()                  (&(CONSTVariables.SwIdTxt))
#define SwIdTxt_ELEMENTS()             (1 * 12)
#define CalIdTxt_Data()                (CONSTVariables.CalIdTxt)
#define CalIdTxt_Ptr()                 (&(CONSTVariables.CalIdTxt))
#define CalIdTxt_ELEMENTS()            (1 * 16)
#define BuildUID_Data()                (CONSTVariables.BuildUID)
#define BuildUID_Ptr()                 (&(CONSTVariables.BuildUID))
#define BuildUID_ELEMENTS()            (1 * 21)
#define IdTableRev_Data()              (CONSTVariables.IdTableRev)
#define IdTableRev_Ptr()               (&(CONSTVariables.IdTableRev))
#define IdTableRev_ELEMENTS()          (1 * 1)
#define HardwareType_Data()            (CONSTVariables.HardwareType)
#define HardwareType_Ptr()             (&(CONSTVariables.HardwareType))
#define HardwareType_ELEMENTS()        (1 * 1)
#define EcuAddr_RAM_Data()             (RAMVariables.EcuAddr_RAM)
#define EcuAddr_RAM_Ptr()              (&(RAMVariables.EcuAddr_RAM))
#define EcuAddr_RAM_ELEMENTS()         (1 * 1)
#define DateStamp_Data()               (CONSTVariables.DateStamp)
#define DateStamp_Ptr()                (&(CONSTVariables.DateStamp))
#define DateStamp_ELEMENTS()           (1 * 20)
#define INPUT29_ADCMon_HoldCount_Data() (EEVariables_RAMShadow.INPUT29_ADCMon_HoldCount)
#define INPUT29_ADCMon_HoldCount_Ptr() (&(EEVariables_RAMShadow.INPUT29_ADCMon_HoldCount))
#define INPUT29_ADCMon_HoldCount_ELEMENTS() (1 * 1)
#define CAN1__XCP_Security_Data()      (EEVariables_RAMShadow.CAN1__XCP_Security)
#define CAN1__XCP_Security_Ptr()       (&(EEVariables_RAMShadow.CAN1__XCP_Security))
#define CAN1__XCP_Security_ELEMENTS()  (1 * 1)
#define CAN1_CANTX_QueueOverrun_Data() (RAMVariables.CAN1_CANTX_QueueOverrun)
#define CAN1_CANTX_QueueOverrun_Ptr()  (&(RAMVariables.CAN1_CANTX_QueueOverrun))
#define CAN1_CANTX_QueueOverrun_ELEMENTS() (1 * 1)
#define CAN1_CANTX_QueueCount_Data()   (RAMVariables.CAN1_CANTX_QueueCount)
#define CAN1_CANTX_QueueCount_Ptr()    (&(RAMVariables.CAN1_CANTX_QueueCount))
#define CAN1_CANTX_QueueCount_ELEMENTS() (1 * 1)
#define CAN1_CANTX_QueueMax_Data()     (RAMVariables.CAN1_CANTX_QueueMax)
#define CAN1_CANTX_QueueMax_Ptr()      (&(RAMVariables.CAN1_CANTX_QueueMax))
#define CAN1_CANTX_QueueMax_ELEMENTS() (1 * 1)
#define CAN1_CANRX_QueueOverrun_Data() (RAMVariables.CAN1_CANRX_QueueOverrun)
#define CAN1_CANRX_QueueOverrun_Ptr()  (&(RAMVariables.CAN1_CANRX_QueueOverrun))
#define CAN1_CANRX_QueueOverrun_ELEMENTS() (1 * 1)
#define CAN1_CANRX_QueueCount_Data()   (RAMVariables.CAN1_CANRX_QueueCount)
#define CAN1_CANRX_QueueCount_Ptr()    (&(RAMVariables.CAN1_CANRX_QueueCount))
#define CAN1_CANRX_QueueCount_ELEMENTS() (1 * 1)
#define CAN1_CANRX_QueueMax_Data()     (RAMVariables.CAN1_CANRX_QueueMax)
#define CAN1_CANRX_QueueMax_Ptr()      (&(RAMVariables.CAN1_CANRX_QueueMax))
#define CAN1_CANRX_QueueMax_ELEMENTS() (1 * 1)
#define CAN1_Startup_Delay_Data()      (EEVariables_RAMShadow.CAN1_Startup_Delay)
#define CAN1_Startup_Delay_Ptr()       (&(EEVariables_RAMShadow.CAN1_Startup_Delay))
#define CAN1_Startup_Delay_ELEMENTS()  (1 * 1)
#define CAN1_ErrorCheck_Interval_Data() (EEVariables_RAMShadow.CAN1_ErrorCheck_Interval)
#define CAN1_ErrorCheck_Interval_Ptr() (&(EEVariables_RAMShadow.CAN1_ErrorCheck_Interval))
#define CAN1_ErrorCheck_Interval_ELEMENTS() (1 * 1)
#define CAN1_ErrorPassive_Delay_Data() (EEVariables_RAMShadow.CAN1_ErrorPassive_Delay)
#define CAN1_ErrorPassive_Delay_Ptr()  (&(EEVariables_RAMShadow.CAN1_ErrorPassive_Delay))
#define CAN1_ErrorPassive_Delay_ELEMENTS() (1 * 1)
#define raptorFaultNonVolatileBits_Data() (EEVariables_RAMShadow.raptorFaultNonVolatileBits)
#define raptorFaultNonVolatileBits_Ptr() (&(EEVariables_RAMShadow.raptorFaultNonVolatileBits))
#define raptorFaultNonVolatileBits_ELEMENTS() (1 * 4)
#define raptorFaultCounts_X_Data()     (RAMVariables.raptorFaultCounts_X)
#define raptorFaultCounts_X_Ptr()      (&(RAMVariables.raptorFaultCounts_X))
#define raptorFaultCounts_X_ELEMENTS() (1 * 4)
#define raptorFaultCounts_Y_Data()     (RAMVariables.raptorFaultCounts_Y)
#define raptorFaultCounts_Y_Ptr()      (&(RAMVariables.raptorFaultCounts_Y))
#define raptorFaultCounts_Y_ELEMENTS() (1 * 4)
#define faultActionMapState_Data()     (EEVariables_RAMShadow.faultActionMapState)
#define faultActionMapState_Ptr()      (&(EEVariables_RAMShadow.faultActionMapState))
#define faultActionMapState_ELEMENTS() (4 * 2)
#define faultActionMapAction_Data()    (EEVariables_RAMShadow.faultActionMapAction)
#define faultActionMapAction_Ptr()     (&(EEVariables_RAMShadow.faultActionMapAction))
#define faultActionMapAction_ELEMENTS() (4 * 2)
#define faultActionCount_Data()        (RAMVariables.faultActionCount)
#define faultActionCount_Ptr()         (&(RAMVariables.faultActionCount))
#define faultActionCount_ELEMENTS()    (1 * 2)
#define raptorFaultOperation_Data()    (EEVariables_RAMShadow.raptorFaultOperation)
#define raptorFaultOperation_Ptr()     (&(EEVariables_RAMShadow.raptorFaultOperation))
#define raptorFaultOperation_ELEMENTS() (1 * 4)
#define InjCDrv_EndOfStart_Data()      (EEVariables_RAMShadow.InjCDrv_EndOfStart)
#define InjCDrv_EndOfStart_Ptr()       (&(EEVariables_RAMShadow.InjCDrv_EndOfStart))
#define InjCDrv_EndOfStart_ELEMENTS()  (1 * 1)
#define EndOfStart_Data()              (EEVariables_RAMShadow.EndOfStart)
#define EndOfStart_Ptr()               (&(EEVariables_RAMShadow.EndOfStart))
#define EndOfStart_ELEMENTS()          (1 * 1)
#define EEPROM_State_Data()            (RAMVariables.EEPROM_State)
#define EEPROM_State_Ptr()             (&(RAMVariables.EEPROM_State))
#define EEPROM_State_ELEMENTS()        (1 * 1)
#define NonVolatileCRC_Data()          (EEVariables_RAMShadow.CRC)
#define NonVolatileCRC_Ptr()           (&(EEVariables_RAMShadow.CRC))

/***** CAL Locator ********************************************************/
#define CALLOC_START                   ((void*)KeySwHiTimeThr_Ptr())
#define CALLOC_LENGTH                  ( sizeof(KeySwHiTimeThr_Data()) + sizeof(KeySwLoTimeThr_Data()) + sizeof(APP_DefaultValue_Data()) + sizeof(TPS_DefaultValue_Data()) + sizeof(PWM_Enable_Data()) + sizeof(APP_InputHighThresh_Data()) + sizeof(APP_InputHi_X_Limit_Data()) + sizeof(APP_InputHi_Y_Limit_Data()) + sizeof(APP_InputLowThresh_Data()) + sizeof(APP_InputLow_X_Limit_Data()) + sizeof(APP_InputLow_Y_Limit_Data()) + sizeof(APP_ADCHiPT_Data()) + sizeof(APP_ADCLoPT_Data()) + sizeof(TPS_InputHighThresh_Data()) + sizeof(TPS_InputHi_X_Limit_Data()) + sizeof(TPS_InputHi_Y_Limit_Data()) + sizeof(TPS_InputLowThresh_Data()) + sizeof(TPS_InputLow_X_Limit_Data()) + sizeof(TPS_InputLow_Y_Limit_Data()) + sizeof(TPS_ADCHiPT_Data()) + sizeof(TPS_ADCLoPT_Data()) + sizeof(CAN1__XCP_BC_ID_Data()) + sizeof(CAN1__XCP_RX_ID_Data()) + sizeof(CAN1__XCP_TX_ID_Data()) + sizeof(INPUT29_ADCMon_HoldCount_Data()) + sizeof(CAN1__XCP_Security_Data()) + sizeof(CAN1_Startup_Delay_Data()) + sizeof(CAN1_ErrorCheck_Interval_Data()) + sizeof(CAN1_ErrorPassive_Delay_Data()) + sizeof(faultActionMapState_Data()) + sizeof(faultActionMapAction_Data()) + sizeof(raptorFaultOperation_Data()) + sizeof(InjCDrv_EndOfStart_Data()) + sizeof(EndOfStart_Data()) + 0)
#endif
